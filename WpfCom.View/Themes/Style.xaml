<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:System1="clr-namespace:System;assembly=System">


    <!--  ListViewControl style  -->
    <!--  Control colors.  -->
    <Color x:Key="WindowColor">#FFE8EDF9</Color>
    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

    <Color x:Key="ControlLightColor">White</Color>
    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


    <Color x:Key="GlyphColor">#FF444444</Color>
    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

    <!--  Border colors  -->
    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
    <Color x:Key="BorderMediumColor">#FF888888</Color>
    <Color x:Key="BorderDarkColor">#FF444444</Color>

    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

    <!--  Control-specific resources.  -->
    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

    <LinearGradientBrush x:Key="MenuPopupBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="{DynamicResource ControlLightColor}" />
        <GradientStop Offset="0.5" Color="{DynamicResource ControlMediumColor}" />
        <GradientStop Offset="1" Color="{DynamicResource ControlLightColor}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#000000FF" />
                <GradientStop Offset="0.4" Color="#600000FF" />
                <GradientStop Offset="0.6" Color="#600000FF" />
                <GradientStop Offset="1" Color="#000000FF" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer
                                DockPanel.Dock="Top"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter
                                    Margin="2,0,2,0"
                                    AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                    ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                    Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>

                            <ScrollContentPresenter
                                Name="PART_ScrollContentPresenter"
                                CanContentScroll="True"
                                CanHorizontallyScroll="False"
                                CanVerticallyScroll="False"
                                KeyboardNavigation.DirectionalNavigation="Local" />
                        </DockPanel>

                        <ScrollBar
                            Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Orientation="Horizontal"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{TemplateBinding HorizontalOffset}" />

                        <ScrollBar
                            Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{TemplateBinding VerticalOffset}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="18" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                            <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle
                            Width="1"
                            HorizontalAlignment="Center"
                            Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="Black" />
                    <GradientStop Offset="1" Color="White" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border
                            x:Name="HeaderBorder"
                            Padding="2,0,2,0"
                            BorderThickness="0,1,0,1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                                            <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.BorderBrush>
                            <Border.Background>

                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0.0" Color="{DynamicResource ControlLightColor}" />
                                            <GradientStop Offset="1.0" Color="{DynamicResource ControlMediumColor}" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>

                            </Border.Background>
                            <ContentPresenter
                                x:Name="HeaderContent"
                                Margin="0,0,0,1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Thumb
                            x:Name="PART_HeaderGripper"
                            Margin="0,0,-9,0"
                            HorizontalAlignment="Right"
                            Style="{StaticResource GridViewColumnHeaderGripper}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="HeaderBorder" Storyboard.TargetProperty="(Panel.Background).                     (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle
                                    Width="{TemplateBinding ActualWidth}"
                                    Height="{TemplateBinding ActualHeight}"
                                    Fill="#60000000" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder" BorderThickness="0,1,0,1">
                                <Border.Background>
                                    <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                </Border.Background>
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                                                <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ListView}" TargetType="ListView">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border
                        Name="Border"
                        Margin="2"
                        Padding="2"
                        BorderThickness="4"
                        CornerRadius="5">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.061,0.081" EndPoint="0.939,0.919">
                                <GradientStop Offset="0" Color="#FFFFE07E" />
                                <GradientStop Offset="1" Color="#FFFFFAEA" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFFFFFFF" />
                        </Border.BorderBrush>
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListViewItem}" TargetType="ListViewItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        x:Name="Border"
                        Padding="2"
                        Background="Transparent"
                        SnapsToDevicePixels="true">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource SelectedBackgroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{DynamicResource SelectedUnfocusedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  End ListViewControl style  -->

    <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border Margin="1,0,0,0">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.501,0.039" EndPoint="0.501,0.971">
                                <GradientStop Offset="0.335" Color="#FF4A7DDB" />
                                <GradientStop Offset="0.879" Color="#FF75B5E0" />
                                <GradientStop Offset="0.986" Color="#FFA4D4F4" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <TextBlock
                            x:Name="ContentHeader"
                            Width="Auto"
                            Padding="7,7,7,7"
                            VerticalAlignment="Stretch"
                            Foreground="White"
                            Text="{TemplateBinding Content}"
                            TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style
        x:Key="MyListBoxStyle"
        BasedOn="{StaticResource {x:Type ListView}}"
        TargetType="{x:Type ListView}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.061,0.081" EndPoint="0.939,0.919">
                    <GradientStop Offset="0" Color="#FFFFE07E" />
                    <GradientStop Offset="1" Color="#FFFFFAEA" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Height" Value="21" />
                    <Setter Property="Background" Value="#5EF4E057" />
                    <Setter Property="Foreground" Value="#FF1133E4" />
                    <Setter Property="FontSize" Value="15" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Disabled Brushes are used for the Disabled look of each control  -->
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <!--<SolidColorBrush x:Key="ApproxBorderBrush" Color="#5677FC" />-->

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />



    <!--  The Background Brush is used as the background for the Headers and Footers  -->

    <SolidColorBrush x:Key="BackgroundBrush" Color="#455EDE" />

    <!--  The Panel Gradient Brush is used as the background for the panels such as the Details Panel  -->

    <LinearGradientBrush x:Key="PanelGradientBrush" StartPoint="0.0337444,0.5" EndPoint="1.24881,0.5">
        <GradientStop Offset="0" Color="#FFEFF6FF" />
        <GradientStop Offset="1" Color="#FFA3AFBA" />
    </LinearGradientBrush>


    <!--  The Diagram Gradient Brush is used as the background for the Diagram area  -->

    <LinearGradientBrush x:Key="ElementaryGradientBrush" StartPoint="-0.00995466,0.777842" EndPoint="1.63827,-0.110634">
        <GradientStop Offset="0" Color="#FFEFF6FF" />
        <GradientStop Offset="1" Color="#FF5677FC" />
    </LinearGradientBrush>


    <!--  This is a color setting for text  -->
    <SolidColorBrush x:Key="FontColor" Color="#FFFFFFFF" />

    <SolidColorBrush x:Key="HeaderFontColor" Color="#FFFFFFFF" />

    <SolidColorBrush x:Key="InputFontColor" Color="#FFFFFFFF" />

    <SolidColorBrush x:Key="GridHeaderFontColor" Color="#FF888888" />

    <SolidColorBrush x:Key="AlternateFontColor" Color="#FF888888" />

    <SolidColorBrush x:Key="SharedBirthdaysGroupHeaderColor" Color="#FF888888" />

    <SolidColorBrush x:Key="PersonInfoBackgroundBrush" Color="#FFD8D8D8" />



    <!--  Кисть границы для больщинства границ  -->

    <SolidColorBrush x:Key="BorderBrush" Color="#FFFFFFFF" />

    <LinearGradientBrush x:Key="InputBackgroundBrush" StartPoint="0.504,-0.319" EndPoint="0.504,0.351">
        <GradientStop Offset="0.416" Color="#FF333333" />
        <GradientStop Offset="0.54" Color="#FF636F8B" />
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="MenuPressedBrush" StartPoint="0.500023,0.999996" EndPoint="0.500023,4.37507e-006">
        <GradientStop Offset="0" Color="#455EDE" />
        <GradientStop Offset="0.1" Color="#5677FC" />
        <GradientStop Offset="1" Color="#455EDE" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PopupMenuBackgroundBrush" Color="#455EDE" />

    <SolidColorBrush x:Key="ListViewFontColor" Color="#FF2466C7" />

    <LinearGradientBrush x:Key="MenuIsHighlightedBrush" StartPoint="0.5,0.999996" EndPoint="0.5,4.37507e-006">
        <GradientStop Offset="0" Color="#455EDE" />
        <GradientStop Offset="0.1" Color="#5677FC" />
        <GradientStop Offset="0.9" Color="#5677FC" />
        <GradientStop Offset="1" Color="#455EDE" />
    </LinearGradientBrush>


    <!--  ButtonBorderBrush is used as the Border for buttons  -->

    <LinearGradientBrush x:Key="ButtonBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0.0" Color="#CCC" />
        <GradientStop Offset="1.0" Color="#444" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledMenuForegroundBrush" Color="#888" />


    <!--  This BitmapEffect is used by the Simple MenuItem  -->

    <DropShadowBitmapEffect
        x:Key="PopupDropShadow"
        ShadowDepth="1.5"
        Softness="0.15" />


    <!--  This is the style for borders  -->
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="{DynamicResource BorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
    </Style>


    <Style x:Key="HeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="Margin" Value="10,0,10,10" />
    </Style>

    <Style x:Key="SectionHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="Century Gothic" />
        <Setter Property="FontSize" Value="13" />
    </Style>

    <Style x:Key="DetailsBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="10,10,10,10" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Margin" Value="10,10,10,0" />
        <Setter Property="Padding" Value="5,5,5,5" />
        <Setter Property="Background" Value="#FF262626" />
    </Style>

    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="0.5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                            x:Name="Rectangle"
                            RadiusX="5"
                            RadiusY="5"
                            Stroke="{x:Null}"
                            StrokeMiterLimit="1.000000"
                            StrokeThickness="0.500000">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                                    <GradientStop Offset="0.335" Color="#FF4A7DDB" />

                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Rectangle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.501,0.039" EndPoint="0.501,0.971">
                                        <GradientStop Offset="0.335" Color="#FF5287E8" />
                                        <GradientStop Offset="0.879" Color="#FFA4D4F4" />
                                        <GradientStop Offset="0.986" Color="#FFA4D4F4" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                            x:Name="Rectangle"
                            RadiusX="5"
                            RadiusY="5"
                            Stroke="{x:Null}"
                            StrokeMiterLimit="1.000000"
                            StrokeThickness="0.500000">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                                    <GradientStop Offset="0.335" Color="#FF4A7DDB" />
                                    <GradientStop Offset="0.879" Color="#FF75B5E0" />
                                    <GradientStop Offset="0.011" Color="#FF04448C" />
                                    <GradientStop Offset="0.986" Color="#FF75B5E0" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Rectangle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                                        <GradientStop Offset="0.335" Color="#FF5287E8" />
                                        <GradientStop Offset="0.879" Color="#FFA4D4F4" />
                                        <GradientStop Offset="0.011" Color="#FF075AB7" />
                                        <GradientStop Offset="0.986" Color="#FFA4D4F4" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="BlackButtonStyle"
        BasedOn="{StaticResource NormalButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                            x:Name="rectangle"
                            RadiusX="5"
                            RadiusY="5"
                            Stroke="{x:Null}"
                            StrokeMiterLimit="1.000000"
                            StrokeThickness="0.500000">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                                    <GradientStop Offset="0.277" Color="#FF273763" />
                                    <GradientStop Offset="0.879" Color="#FFA6B5BC" />
                                    <GradientStop Offset="0.011" Color="#FF092644" />
                                    <GradientStop Offset="0.986" Color="#FFA6B5BC" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                                        <GradientStop Offset="0.277" Color="#FF41599A" />
                                        <GradientStop Offset="0.879" Color="#FFB6C7CF" />
                                        <GradientStop Offset="0.011" Color="#FF124376" />
                                        <GradientStop Offset="0.986" Color="#FFB6C7CF" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="RedButtonStyle"
        BasedOn="{StaticResource NormalButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                            x:Name="rectangle"
                            RadiusX="5"
                            RadiusY="5"
                            Stroke="#FF570606"
                            StrokeMiterLimit="1.000000"
                            StrokeThickness="0.500000">
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                                    <GradientStop Offset="0.234" Color="#FF882119" />
                                    <GradientStop Offset="0.879" Color="#FFC78A81" />
                                    <GradientStop Offset="0.004" Color="#FF440D09" />
                                    <GradientStop Offset="0.986" Color="#FFC78A81" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                                        <GradientStop Offset="0.234" Color="#FFC72E23" />
                                        <GradientStop Offset="0.879" Color="#FFEAA49A" />
                                        <GradientStop Offset="0.004" Color="#FF9A2017" />
                                        <GradientStop Offset="0.986" Color="#FFEAA49A" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  This sets the default style for all buttons  -->
    <Style BasedOn="{StaticResource NormalButtonStyle}" TargetType="{x:Type Button}" />

    <!--  Repeat Button Style - This is used by ScrollBar for the up and down buttons  -->
    <Style
        x:Key="RepeatButtonStyle"
        BasedOn="{x:Null}"
        TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--  Main Menu - This template uses a StackPanel to layout MenuItems  -->

    <Style x:Key="MenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Margin="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel
                            Background="{TemplateBinding Background}"
                            ClipToBounds="True"
                            IsItemsHost="True"
                            Orientation="Horizontal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  MenuItem - The template uses triggers to provide four different arrangements of menu item which are set via the Role property  -->

    <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="Border"
                        Margin="0,0,10,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{x:Null}"
                        BorderThickness="1,1,1,1"
                        CornerRadius="3,3,3,3">
                        <Grid>


                            <!--
                                The Grid is used to hold together columns for an Content and Arrow to show the next level
                                Size sharing is used in Grid so that the Icon, Content, Arrow for each MenuItem align together
                            -->

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>


                            <!--  Content for the menu text etc  -->

                            <ContentPresenter
                                x:Name="HeaderHost"
                                Margin="{TemplateBinding Padding}"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />


                            <!--  Arrow drawn path which points to the next level of the menu  -->

                            <Grid
                                x:Name="ArrowPanel"
                                Grid.Column="1"
                                Margin="0,0,6,0"
                                VerticalAlignment="Center">
                                <Path
                                    x:Name="ArrowPanelPath"
                                    Height="4.095"
                                    VerticalAlignment="Center"
                                    Data="M-1.0089707E-11,0.0050000012 L8.03125,-3.5155176E-24 3.9995833,4.095 z"
                                    Fill="{TemplateBinding Foreground}" />
                            </Grid>


                            <!--  The Popup is the body of the menu which expands down or across depending on the level of the item  -->

                            <Popup
                                x:Name="SubMenuPopup"
                                AllowsTransparency="true"
                                Focusable="false"
                                IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="Slide"
                                VerticalOffset="0">
                                <Grid x:Name="SubMenu">
                                    <Border
                                        x:Name="SubMenuBorder"
                                        Background="{DynamicResource PopupMenuBackgroundBrush}"
                                        BorderBrush="{DynamicResource SolidBorderBrush}"
                                        BorderThickness="1" />

                                    <!--  StackPanel holds children of the menu. This is set bu IsItemsHost=True  -->

                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>


                    <!--  These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role  -->

                    <ControlTemplate.Triggers>


                        <!--  Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down  -->

                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
                        </Trigger>


                        <!--  Role = TopLevelItem :  this is a child menu item from the top level without any child items  -->

                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>



                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                        </Trigger>


                        <!--  Role = SubMenuItem : this is a child menu item which has children  -->

                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
                        </Trigger>

                        <Trigger SourceName="SubMenuPopup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="SubMenu" Property="Margin" Value="0,0,3,3" />
                            <Setter TargetName="SubMenu" Property="SnapsToDevicePixels" Value="true" />
                            <Setter TargetName="SubMenuBorder" Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" />
                        </Trigger>


                        <!--  Using the system colors for the Menu Highlight and IsEnabled  -->

                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuIsHighlightedBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF000000" />
                        </Trigger>

                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuPressedBrush}" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuPressedBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledMenuForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--  Welcome Header Background  -->
    <DrawingBrush x:Key="WelcomeHeaderBg" />

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FFF" />
                <GradientStop Offset="1.0" Color="#AAA" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#CCC" />
                <GradientStop Offset="1.0" Color="#444" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <ControlTemplate x:Key="FamilyMemberComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border"
                Grid.ColumnSpan="2"
                CornerRadius="5">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                        <GradientStop Offset="0.335" Color="#FF4A7DDB" />
                        <GradientStop Offset="0.879" Color="#FF75B5E0" />
                        <GradientStop Offset="0.011" Color="#FF04448C" />
                        <GradientStop Offset="0.986" Color="#FF75B5E0" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border
                Grid.Column="0"
                Margin="1"
                Background="{StaticResource WindowBackgroundBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="0,0,1,0"
                CornerRadius="2,0,0,2" />
            <Path
                x:Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 0 L 4 4 L 8 0 Z"
                Fill="{StaticResource GlyphBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                            <GradientStop Offset="0.335" Color="#FF5287E8" />
                            <GradientStop Offset="0.879" Color="#FFA4D4F4" />
                            <GradientStop Offset="0.011" Color="#FF075AB7" />
                            <GradientStop Offset="0.986" Color="#FFA4D4F4" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0.501,0.971" EndPoint="0.501,0.039">
                            <GradientStop Offset="0.335" Color="#FF5287E8" />
                            <GradientStop Offset="0.879" Color="#FFA4D4F4" />
                            <GradientStop Offset="0.011" Color="#FF075AB7" />
                            <GradientStop Offset="0.986" Color="#FFA4D4F4" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />
    </ControlTemplate>

    <Style x:Key="FamilyMemberComboBox" TargetType="ComboBox">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="110" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource FamilyMemberComboBoxToggleButton}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            Visibility="Hidden" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource WindowBackgroundBrush}"
                                    BorderBrush="{StaticResource SolidBorderBrush}"
                                    BorderThickness="1" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DirectoryComboBox" TargetType="ComboBox">
        <Setter Property="OverridesDefaultStyle" Value="true" />

        <Setter Property="MinWidth" Value="110" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Template="{StaticResource FamilyMemberComboBoxToggleButton}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Background="Transparent"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            Visibility="Hidden" />
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource WindowBackgroundBrush}"
                                    BorderBrush="{StaticResource SolidBorderBrush}"
                                    BorderThickness="1" />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DrawingBrush x:Key="ErrorIcon">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Brush="#FFFFE9E9" Geometry="F1 M 18.864,1179.45L 2.50133,1179.45C 1.496,1179.45 0.682667,1180.27 0.682667,1181.29L 0.682667,1192.28C 0.682667,1193.29 1.496,1194.12 2.50133,1194.12L 11.78,1194.12L 16.8827,1199.22L 16.8827,1194.12L 18.864,1194.12C 19.8667,1194.12 20.6827,1193.29 20.6827,1192.28L 20.6827,1181.29C 20.6827,1180.27 19.8667,1179.45 18.864,1179.45 Z ">
                        <GeometryDrawing.Pen>
                            <Pen
                                Brush="#FF8E0E0E"
                                LineJoin="Round"
                                Thickness="1.33333" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <GeometryDrawing Geometry="F1 M 4.344,1184.77L 16.7987,1184.77">
                        <GeometryDrawing.Pen>
                            <Pen
                                Brush="#FF8E0E0E"
                                LineJoin="Round"
                                Thickness="1.33333" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                    <GeometryDrawing Geometry="F1 M 4.34667,1187.98L 16.7933,1187.98">
                        <GeometryDrawing.Pen>
                            <Pen
                                Brush="#FF8E0E0E"
                                LineJoin="Round"
                                Thickness="1.33333" />
                        </GeometryDrawing.Pen>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

</ResourceDictionary>